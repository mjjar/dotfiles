unbind C-b
set -g prefix C-s
bind-key -r C-s send-prefix

bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"


bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Undercurl
set -g default-terminal "${TERM}"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

# Terminal color
set -g default-terminal "xterm-256color"                                                                        
set-option -ga terminal-overrides ",xterm-256color:Tc" # Not to ovveride nvim color

# =========================
#         STATUS             
# =========================
set -g renumber-windows on
# set refresh interval for status bar
set -g status-interval 30
# Set the numbering of windows to go from 1 instead of
set -g base-index 1
# Set terminal title
set-option -g set-titles on
set-option -g set-titles-string '‚ùê #S ‚óè #I'

set-option -g status on
set -g status-justify left
set -g status-left-length 100
set -g status-right-length 100

status_items="#{?window_active,#{?window_zoomed_flag,#[fg=blue]Ô°ä,},}"

set -g mode-style "fg=#7aa2f7,bg=#3b4261"

set -g message-style "fg=#7aa2f7,bg=#3b4261"
set -g message-command-style "fg=#7aa2f7,bg=#3b4261"

set -g pane-border-style "fg=#3b4261"
set -g pane-active-border-style "fg=#7aa2f7"

set -g status-style "fg=#7aa2f7,bg=#1f2335"

set -g status-left-style NONE
set -g status-right-style NONE

set -g status-left "#[fg=#7aa2f7,bold] ‚ùê #S "
set -g status-right "#[fg=#7aa2f7] %I:%M %p | ÔóØ %Y-%m-%d "

setw -g window-status-activity-style "fg=#a9b1d6,bg=#1f2335"
setw -g window-status-separator ""
setw -g window-status-style "NONE,fg=#a9b1d6,bg=#1f2335"
setw -g window-status-format "#[default] #I: #W $status_items "
setw -g window-status-current-format "#[fg=#7aa2f7,bg=#3b4261,bold] #I: #W $status_items "
# =========================
#       END STATUS             
# =========================


#set-option -g status-keys "emacs"

set-option -g status-left-length 50

set-option -g status-right " #(battery -t) "

bind-key "-" split-window -v  -c "#{pane_current_path}"
bind-key \\ split-window -h  -c "#{pane_current_path}"

bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

bind c new-window -c '#{pane_current_path}'

bind-key b break-pane -d

bind-key C-j choose-tree

# Use vim keyb
# Status indings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
# Update default binding of `Enter` to also use copy-pipe
# unbind -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy" 

# Scroll with mouse
set -g mouse on

# Make the `beginning/end` of line and `bck-i-search` commands work within tmux
#bind-key -T '^R' history-incremental-search-backward
# }}}

